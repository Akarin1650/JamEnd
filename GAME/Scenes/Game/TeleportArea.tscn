[gd_scene load_steps=31 format=2]

[ext_resource path="res://Ressource/Assets/SPR_Summoning_Circle.png" type="Texture" id=1]
[ext_resource path="res://Scripts/Objects/GameObjects/Teleport.cs" type="Script" id=2]
[ext_resource path="res://Ressource/Assets/linesTest.png" type="Texture" id=3]
[ext_resource path="res://Ressource/Assets/Warp Animation/Warp_Sprite_Sheet.png" type="Texture" id=4]

[sub_resource type="CanvasItemMaterial" id=27]
blend_mode = 1

[sub_resource type="AtlasTexture" id=14]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=15]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 697, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=16]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 1394, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=17]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 2091, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=18]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 2788, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=19]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 3485, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=20]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 4182, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=21]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 4879, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=22]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 5576, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=23]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 6273, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=24]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 6970, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=25]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 7667, 0, 697, 540 )

[sub_resource type="AtlasTexture" id=26]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 8364, 0, 697, 540 )

[sub_resource type="SpriteFrames" id=13]
animations = [ {
"frames": [ SubResource( 14 ), SubResource( 15 ), SubResource( 16 ), SubResource( 17 ), SubResource( 18 ), SubResource( 19 ), SubResource( 20 ), SubResource( 21 ), SubResource( 22 ), SubResource( 23 ), SubResource( 24 ), SubResource( 25 ), SubResource( 26 ) ],
"loop": true,
"name": "default",
"speed": 7.0
} ]

[sub_resource type="CircleShape2D" id=1]
radius = 190.042

[sub_resource type="Animation" id=2]
resource_name = "Destroy"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( -2, 0.15932 ),
"update": 0,
"values": [ Vector2( 1.1, 1.1 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Halo:material:shader_param/ray2_intensity")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.752 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Halo:material:shader_param/color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 0.670588, 0, 0.647059, 0.8 ), Color( 1, 0.309804, 0.858824, 1 ), Color( 0.670588, 0, 0.647059, 0.8 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Lines:self_modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.392157 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Lines:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1.5, 1.5 ), Vector2( 1.5, 1.5 ), Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Halo:material:shader_param/ray2_intensity")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.752 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Halo:material:shader_param/color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0.670588, 0, 0.647059, 0.8 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Lines:self_modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.392157 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Lines:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:rotation_degrees")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="CanvasItemMaterial" id=6]
blend_mode = 1
particles_animation = true
particles_anim_h_frames = 3
particles_anim_v_frames = 1
particles_anim_loop = false

[sub_resource type="Gradient" id=10]
offsets = PoolRealArray( 0.03125, 0.286458, 0.802083, 1 )
colors = PoolColorArray( 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=11]
gradient = SubResource( 10 )

[sub_resource type="Curve" id=8]
_data = [ Vector2( 0, 0.491877 ), 0.0, 0.0, 0, 0, Vector2( 1, 1 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=12]
curve = SubResource( 8 )

[sub_resource type="ParticlesMaterial" id=7]
flag_disable_z = true
gravity = Vector3( 0, 0, 0 )
angular_velocity = 10.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
angle = 360.0
angle_random = 1.0
scale = 3.0
scale_random = 0.3
scale_curve = SubResource( 12 )
color_ramp = SubResource( 11 )
anim_offset = 1.0
anim_offset_random = 1.0

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/angle = -0.369
shader_param/position = -0.51
shader_param/spread = 1.0
shader_param/cutoff = 0.01
shader_param/falloff = 0.446
shader_param/edge_fade = 0.398
shader_param/speed = 3.0
shader_param/ray1_density = 8.0
shader_param/ray2_density = 30.0
shader_param/ray2_intensity = 0.752
shader_param/color = Color( 0.670588, 0, 0.647059, 0.8 )
shader_param/hdr = true
shader_param/seed = 5.0

[node name="TP" type="Sprite"]
position = Vector2( 343, 253 )
z_index = 1
texture = ExtResource( 1 )
offset = Vector2( 14, 45 )
script = ExtResource( 2 )
animPath = NodePath("AnimationPlayer")
areaPath = NodePath("Area2D")

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
self_modulate = Color( 1, 1, 1, 0.360784 )
show_behind_parent = true
material = SubResource( 27 )
position = Vector2( 22, 0 )
scale = Vector2( 2, 2 )
z_index = -1
frames = SubResource( 13 )
frame = 8
playing = true

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2( -2, 0 )
shape = SubResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Destroy = SubResource( 2 )
anims/RESET = SubResource( 3 )

[node name="Lines" type="Particles2D" parent="."]
self_modulate = Color( 1, 1, 1, 0.392157 )
material = SubResource( 6 )
process_material = SubResource( 7 )
texture = ExtResource( 3 )

[node name="Halo" type="ColorRect" parent="."]
material = SubResource( 5 )
anchor_top = -0.126
margin_left = -324.545
margin_top = -176.902
margin_right = 356.455
margin_bottom = 244.364
